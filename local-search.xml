<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>linux下使用keysmith实现icp转账</title>
    <link href="/2022/07/24/linux%E4%B8%8B%E4%BD%BF%E7%94%A8keysmith%E5%AE%9E%E7%8E%B0icp%E8%BD%AC%E8%B4%A6/"/>
    <url>/2022/07/24/linux%E4%B8%8B%E4%BD%BF%E7%94%A8keysmith%E5%AE%9E%E7%8E%B0icp%E8%BD%AC%E8%B4%A6/</url>
    
    <content type="html"><![CDATA[<p>  通过同样的一组私钥， plug 钱包和 keysmith 工具生成的地址是一样的， 本视频介绍使用keysmith来创建icp地址和转账。</p><iframe src="//www.youtube.com/embed/EHzHwDN9HEs" frameborder="0" allowfullscreen=""></iframe>]]></content>
    
    
    <categories>
      
      <category>web3开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网件R7000梅林固件使用frp实现群晖唤醒和远程访问</title>
    <link href="/2022/07/24/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E5%94%A4%E9%86%92%E5%92%8C%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    <url>/2022/07/24/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E5%94%A4%E9%86%92%E5%92%8C%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<p>硬件：       刷了梅林380.70_0-X7.9.1版本固件的网件R7000路由器<br>            群晖 DS220+<br>            有公网ip 的主机一台，这里用的腾讯云</p><p>  因为群晖运行的时候有一些噪音，在外租房电费比较高，长期使用的电费也比较可观了。最好能设置成用到的时候远程启动，并且远程访问。这就要用到frp了。</p><p>仿照前面的文章在路由器软件中心里面安装上插件 frpc ，注意frpc 稳定运行需要有虚拟内存。再买一个frps服务，我用的是腾讯云，一年50元。</p><p>整个运行流程涉及到四个设备，分别是</p><ol><li>控制端手机，用来控制群晖启动，访问群晖数据，手机直接访问的是 frps ，在这里是这里是<br>2）腾讯云主机 ，云主机运行 frps 服务作为中转和<br>3）路由器上的frpc 客户端实现交互，frpc客户端配置的穿透服务，最终交互就是<br>4）群晖DS220+</li></ol><p>首先登陆腾讯云，我用的是 winserver 系统。 下载和路由器上frpc 版本对应的frps ，这个版本对应很重要。 </p><p>然后就是配置 frps.ini 文件。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[common]</span><br># 设置地址及通信端口<br>bind_addr = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br>bind_port = <span class="hljs-number">7000</span><br><br># 监听<span class="hljs-number">7080</span>与<span class="hljs-number">7443</span>端口，进行 HTTP 与 HTTPS 代理，HTTP 与 HTTPS 端口可以成设置一样<br>vhost_http_port = <span class="hljs-number">7080</span><br>vhost_https_port = <span class="hljs-number">7443</span><br><br># 设置查看仪表板服务地址及端口，dashboard_addr 不设置，默认与 bind_addr 一样，如果不设置 dashboard_port 端口不会开启这个服务<br>dashboard_addr = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br>dashboard_port = <span class="hljs-number">7500</span><br><br># 设置仪表盘服务的登录的账号与密码，如果不设置就默认都是 admin<br>dashboard_user = admin<br>dashboard_pwd = xxxxxx<br> <br># 设置Token, 尽量配置复杂些，配置 frpc 会用到<br>token = xxxxxx<br></code></pre></td></tr></table></figure><p>frps 配置基本上都是一个模式，参考github上的示例修改下就可以了。注意最好这里把目录下frpc相关的所有文件都删除，只保留frps相关的文件，要不然会不小心弄混。</p><p>然后就是路由器上的 frpc 配置 :</p><img src="/2022/07/24/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E5%94%A4%E9%86%92%E5%92%8C%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/001.png" class="" title="图片引用方法一"><p>上图中简单设置部分，服务器一栏填写腾讯云的公网ip地址。http穿透服务端口，https穿透服务端口 要和 配置文件 frps.ini 里面的 对应。frpc 用户名称随便填。</p><p>穿透服务配置下面两行代表两个服务，一个是 远程唤醒服务，协议类型是 udp ，内网主机地址就是群晖的局域网ip地址（静态分配IP）。远程主机端口 要和 手机上唤醒软件的配置一致，代理名称是 MyWake ，用来把群晖远程唤醒。</p><p>手机上Magic Packet配置：(注意mac地址就是群晖的mac地址，WOL 地址是云服务器地址)</p><img src="/2022/07/24/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E5%94%A4%E9%86%92%E5%92%8C%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/003.jpg" class="" title="手机设置"><p>按照上面设置好了之后，发现一个问题，就是路由器重启之后就无法直接从远程启动群晖了。需要 <span style="color:rgb(200, 0, 0);">在局域网里面启动一次群晖之后，保持路由器不要重启，再次启动群晖的时候才可以远程启动，</span>至于原因还没找到（arp 绑定设备也做了）先这样用着吧，好在R7000稳如老狗，搭配上UPS可以做到常年不用重启了。</p><p>还有一个是 远程访问服务，协议类型是 http ，代理名称是 webdav ，域名配置也要填写服务器的ip地址，如果不填写就会在手机链接的时候遇到 <code>[W] [newhttp.go:202] http: proxy error: no such domain</code> 的错误。 参考链接： <a href="https://www.dazhuanlan.com/wowowokao/topics/1697175">frp实现内网穿透</a> 。内网主机端口是群晖 webdav 服务的http端口 ：</p><img src="/2022/07/24/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E5%94%A4%E9%86%92%E5%92%8C%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/002.png" class="" title="群晖webdav配置"><p>nPlayer 访问Webdav设置：</p><img src="/2022/07/24/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E7%BE%A4%E6%99%96%E5%94%A4%E9%86%92%E5%92%8C%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/004.jpg" class="" title="nPlayer访问Webdav设置"><p> 上图中 主机填写云服务公网ip ，用户名和密码就填写 webdav 服务的用户名和密码 ，端口就是远程主机的端口。</p><p>至此就可以在手机上通过 frp + webdav 协议 访问群晖里面的音视频文件了。</p><p>为什么使用webdav 协议：<br>  因为 WEBDAV 有各种音视频播放器的支持，很方便。以前想从外网播放群晖的音乐使用官方播放器界面丑陋不说，连接速度还很慢。按照网友 <a href="https://laosu.ml/archives/page/2/">老苏的blog</a> 博客尝试过 Dim koel 等各种流媒体方案结果搭建十分麻烦，有的还要花钱，播放器还十分的小众。不如用支持 webdav 协议的播放器，用的人多，播放效果也很不错。</p><p>PC主机的远程唤醒和远程控制和这个原理差不多，仿照这个弄就可以了，这里就不写了。</p>]]></content>
    
    
    <categories>
      
      <category>系统管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网件R7000梅林固件使用遇到的几个小问题</title>
    <link href="/2022/07/23/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <url>/2022/07/23/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>    目前手头有一个 Netgear R7000 ,刷了梅林固件380.70_0-X7.9.1 。</p><p>    按照 <a href="https://www.youtube.com/watch?v=LwYMQEyUz60">油管网友的教程</a>使用离线安装的方式 刷了 clash 固件用来科学上网很好用。在这过程中也遇到了各种问题。最常见的比如说 安装的时候提示 有敏感词的，需要开启ssh 登录路由器后台输入shell 命令解除。</p><p>   我想再用在线安装的方式安装一些其他的插件，比如说frpc 实现内网穿透，但是发现软件中心无法更新， 一直显示版本0.0，经过搜索发现是 380版本固件用的是 <a href="https://ngrok.wang/">https://ngrok.wang</a> 这个域名，但是这个域名过期了。</p><p>还需要 ssh 登录后台shell 命令修改域名 ：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">sed -<span class="hljs-selector-tag">i</span> &#x27;s/koolshare<span class="hljs-selector-class">.ngrok</span><span class="hljs-selector-class">.wang</span>/ks<span class="hljs-selector-class">.ddnsto</span><span class="hljs-selector-class">.com</span>/g&#x27; /koolshare/scripts/ks_app_install<span class="hljs-selector-class">.sh</span><br>sed -<span class="hljs-selector-tag">i</span> &#x27;s/koolshare<span class="hljs-selector-class">.ngrok</span><span class="hljs-selector-class">.wang</span>/ks<span class="hljs-selector-class">.ddnsto</span><span class="hljs-selector-class">.com</span>/g&#x27; /koolshare/webs/Main_Soft_center<span class="hljs-selector-class">.asp</span><br></code></pre></td></tr></table></figure><p> <span style="color:rgb(200, 0, 0);"> 注意修改之后要用vi打开文件搜索确认一下是否都完成了替换 </span></p><p>参考链接： <a href="https://www.dreambuildinglab.com/router/merlin/koolshare-software-center-cannot-be-updated-solution.html">Koolshare软件中心无法更新解决方案</a></p><p>改好之后可以加载软件中心了，但是各种插件版本比较老了，比如说 frpc还是古老的 0.20.0 版本，想着先安装试试能不能与frps 建立起连接。</p><p>​ 结果遇到了下载文件校验不一致的问题，按照 <a href="https://www.right.com.cn/forum/thread-8091282-1-1.html">Softcenter下载文件校验不一致</a>  的方法需要删除&#x2F;jffs 目录下的<br>.koolshare 文件夹，在删除之前最好把这个目录备份起来。 然后再执行命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">kill -<span class="hljs-number">9</span> $(pidof skipd)<br>cd /jffs &amp;&amp; rm -r .<span class="hljs-selector-attr">[a-zA-Z_]</span>* *<br>reboot<br></code></pre></td></tr></table></figure><p>重启…. 结果等了很久也无法联网，打开cmd查看， 发现竟然无法正确的获取ip地址，也就是路由器DHCP都没启动，害怕是路由器坏了。赶紧 手动给电脑分配一个ip  (192.168.50.xx),分配ip之后尝试ping 路由器可以ping 的通。 用 ssh 登录路由器 把上一步删除的 .koolshare 文件夹恢复一下<br>再重启，路由器居然又正常了。</p><p>打开软件中心再次尝试安装 frpc插件也没有 “下载文件校验不一致！” 的错误了。 </p><p>安装虚拟内存插件也遇到了这个问题，用同样的方式解决就可以了。</p><img src="/2022/07/23/%E7%BD%91%E4%BB%B6R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/001.png" class="" title="图片引用方法一"><p>后记：<br>   下载离线安装插件的时候不光要知道梅林固件版本，还要知道  网件R7000 处理器架构版本：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css"># cat /proc/cpuinfo<br>Processor       : ARMv7 Processor rev <span class="hljs-number">0</span> (v7l)<br>processor       : <span class="hljs-number">0</span><br>BogoMIPS        : <span class="hljs-number">1998.84</span><br><br>processor       : <span class="hljs-number">1</span><br>BogoMIPS        : <span class="hljs-number">1998.84</span><br><br>Features        : swp half thumb fastmult edsp<br>CPU implementer : <span class="hljs-number">0</span>x41<br>CPU architecture: <span class="hljs-number">7</span><br>CPU variant     : <span class="hljs-number">0</span>x3<br>CPU part        : <span class="hljs-number">0</span>xc09<br>CPU revision    : <span class="hljs-number">0</span><br><br>Hardware        : Northstar Prototype<br>Revision        : <span class="hljs-number">0000</span><br>Serial          : <span class="hljs-number">0000000000000000</span><br></code></pre></td></tr></table></figure><p>可以看出是 armv7l 架构 32位版本。</p><p>感觉clash比起 shadowsocks 要好用多了。 直接在路由器上科学上网 就不用再单独的设置每一个设备了，有些设备比如说机顶盒游戏主机设置代理很麻烦。使用路由器也可以减少登录设备数量，有的机场也会限制这个数量。</p><p>在使用苹果随行功能的时候如果局域网某个设备打开了代理，那么导致随行失败。而路由器作为全局的网络出口把代理设在这里就没有这种问题。</p>]]></content>
    
    
    <categories>
      
      <category>系统管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R7000梅林固件设置虚拟内存</title>
    <link href="/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/"/>
    <url>/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</url>
    
    <content type="html"><![CDATA[<p>硬件准备 :   刷了梅林380.70_0-X7.9.1固件的 网件R7000路由器一台<br>            一个 8G 的U盘 </p><p>首先使用 DiskGenius 把U盘格式化为ext4 格式。</p><img src="/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/001.png" class="" title="图片引用方法一"><img src="/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/002.png" class="" title="图片引用方法一"><p>格式化好U盘之后，把U盘插到路由器上 <span style="color:rgb(200, 0, 0);">[ 建议插到USB2.0口上,我曾经把U盘插到USB3.0口上结果虚拟内存运行一会clash插件失灵了，我只测试了一次，为了保险起见还是插到2.0口上吧 ] </span><br>，然后到软件中心安装虚拟内存插件</p><img src="/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/004.png" class="" title="图片引用方法一"><p>进入虚拟内存插件后可以看到状态，选择虚拟内存大小，建议512M或1G :</p><img src="/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/005.png" class="" title="图片引用方法一"><p>最后创建虚拟内存等待完成即可 </p><img src="/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/005-1.png" class="" title="图片引用方法一"><p><span style="color:rgb(200, 0, 0);">注意，如果你在刚创建完虚拟内存之后就查看虚拟内存大小，不管是在命令行 还是在路由器界面看到的虚拟内大小都是0 ，需要等待几分钟， 在命令行时刻观察虚拟内存大小，等这个数值涨到指定的大小之后虚拟内存才可以使用。</span></p><img src="/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/006-1.png" class="" title="图片引用方法一"><img src="/2022/07/17/R7000%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/006.png" class="" title="图片引用方法一">]]></content>
    
    
    <categories>
      
      <category>系统管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>win10和Mac双系统装机整理完美启动</title>
    <link href="/2022/07/11/win10%E5%92%8CMac%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%A3%85%E6%9C%BA%E6%95%B4%E7%90%86%E5%AE%8C%E7%BE%8E%E5%90%AF%E5%8A%A8/"/>
    <url>/2022/07/11/win10%E5%92%8CMac%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%A3%85%E6%9C%BA%E6%95%B4%E7%90%86%E5%AE%8C%E7%BE%8E%E5%90%AF%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<p>系统配置和布局：<br>主板：微型B460m mortar 非wifi版本<br>Cpu：I5 – 10400 （带核显）<br>内存:金士顿Fury骇客神条2666（共48G） 16G + 8G + 16G + 8G<br>显卡：瀚凯 RX6600xt<br>硬盘：西数SN550 500G  金士顿M.2接口（NVME协议）1T.<br>网卡：BCM94360CS2  </p><img src="/2022/07/11/win10%E5%92%8CMac%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%A3%85%E6%9C%BA%E6%95%B4%E7%90%86%E5%AE%8C%E7%BE%8E%E5%90%AF%E5%8A%A8/001.png" class="" title="图片引用方法一"><p> 西数SN550 插在第一个（靠近cpu的）M2口，网卡通过转接板插在第二个M2口，金士顿M.2固态通过pcie转m2插在最下面的pcie接口上。Rx6600xt装在最上面pcie口。 剩下sata1口和sata2口还有两个盘。</p><p>首先安装黑苹果，安装过程参考OpenCore官方的教程<a href="https://dortania.github.io/OpenCore-Install-Guide/prerequisites.html#prerequisites">https://dortania.github.io/OpenCore-Install-Guide/prerequisites.html#prerequisites</a> .这里说明一下，这里的安装也分在线和离线安装，我选择的是在线安装，也就是制作一个启动U盘，在安装的过程中自动下载指定的mac系统。</p><p>还有不同的制作安装U盘的方案，我用的是在win10下用rufus的方案，主要参考的过程：Making the installer in Windows | OpenCore Install Guide (dortania.github.io) ，感觉这种方式是最安全的，因为全程所用到的工具只有python3 和rufus。.这个教程制作完之后得到 com.apple.recovery.boot 文件夹，剩下的EFI文件夹是用大佬制作的现成的： <a href="https://github.com/fpfeng/Hackintosh-10400-B460M-MORTAR">GitHub - fpfeng&#x2F;Hackintosh-10400-B460M-MORTAR </a><br>最终得到U盘根目录如下所示：</p><img src="/2022/07/11/win10%E5%92%8CMac%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%A3%85%E6%9C%BA%E6%95%B4%E7%90%86%E5%AE%8C%E7%BE%8E%E5%90%AF%E5%8A%A8/002.png" class="" title="图片引用方法一"><p>插上U盘 进bios选择U盘启动，剩下就是按照提示一步步安装这中间没遇到什么问题，把mac装到SN550盘里面。</p><p>装好mac系统之后再把sata盘的win10用 DiskGenius迁移到金士顿M.2 1T固态里面。试了迁移两次都无法启动无奈只能重新安装一遍了。但是安装完之后出问题了：在<text color="red">UEFI硬盘BBS优先权</text>  选项里面看不到win10的盘（也就是金士顿M2固态）（下图是正常时候拍的）</p><img src="/2022/07/11/win10%E5%92%8CMac%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%A3%85%E6%9C%BA%E6%95%B4%E7%90%86%E5%AE%8C%E7%BE%8E%E5%90%AF%E5%8A%A8/003.png" class="" title="图片引用方法一"><p>以前win10安装在sata盘里面的时候在这里还能识别到win10 的bootManager呢。现在装到pcie转接口的M2盘就看不到了，切换到存储设备列表界面可以看到stat1~2口的盘和M2_1接口盘。M2的第一个口是西数，M2的第二个口插着bcm网卡，除此之外就看不到别的了：</p><img src="/2022/07/11/win10%E5%92%8CMac%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%A3%85%E6%9C%BA%E6%95%B4%E7%90%86%E5%AE%8C%E7%BE%8E%E5%90%AF%E5%8A%A8/004.png" class="" title="图片引用方法一"><p> 还以为是bios没法识别pcie口转接的盘导致的，无奈只能把pcie接口的金士顿盘和网卡换个位置结果在存储设备列表界面能看到金士顿盘了，但是在UEFI硬盘BBS优先权里面还是无法找到这个盘里的系统。后来才知道是因为硬盘没有ESP分区（里面有EFI文件）bios就搜索不到。</p> <img src="/2022/07/11/win10%E5%92%8CMac%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%A3%85%E6%9C%BA%E6%95%B4%E7%90%86%E5%AE%8C%E7%BE%8E%E5%90%AF%E5%8A%A8/005.png" class="" title="图片引用方法一"><p> 为什么没有这个分区？ 以前安装都是有的，而且在虚拟机里面安装的win10都有这个分区，经过搜索得知 <text color="red">测到有一个硬盘有EFI分区了那么安装的系统就不再有这个分区</text> 。前面已经说了安装了黑果已经有一个EFI分区了，知道原因后就把苹果系统所在的SN550拆下来，再次重新安装win10，这次安装的终于有了ESP分区了，在苹果的OC界面和bios的硬盘启动顺序都能识别到win10的引导项了。</p>  <img src="/2022/07/11/win10%E5%92%8CMac%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%A3%85%E6%9C%BA%E6%95%B4%E7%90%86%E5%AE%8C%E7%BE%8E%E5%90%AF%E5%8A%A8/006.png" class="" title="图片引用方法一"><p> 但是还遇到了另外重要的问题，就是用OC来引导win10会遇到ACPI error的蓝屏错误，这个问题经过大量的查阅资料终于发现是config.plist文件的一个配置 SSDT-GPRW.aml 这里从false 改为 true即可解决。</p><p>还有rx6600xt在黑果启动阶段黑屏的问题，可以加上引导启动参数agdpmod&#x3D;pikera 解决！</p>]]></content>
    
    
    <categories>
      
      <category>系统管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/07/09/hello-world/"/>
    <url>/2022/07/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
